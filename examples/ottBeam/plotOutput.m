% Generate a plot of the FDTD field simulation output
%
% Part of ot-cpp-fdtd, Copyright 2020 Isaac Lenton
% See LICENSE for details about using/distributing this file.

% data files
files = {'plane_0.dat', 'plane_1.dat'};

sz = [346, 186];

for ii = 1:length(files)
  
  this_file = files{ii};
  data = importfile(this_file);
  
  yy = reshape(data.Y, sz);
  zz = reshape(data.Z, sz);
  Ex = reshape(data.Ex, sz);
  Ey = reshape(data.Ey, sz);
  Ez = reshape(data.Ez, sz);

  F = Ex.^2 + Ey.^2 + Ez.^2;
  
  figure();
  h = pcolor(yy, zz, F);
  h.EdgeColor = 'none';
  axis image;
  
end

%% Function for importing the files

function plane0 = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   PLANE0 = IMPORTFILE(FILENAME) Reads data from text file FILENAME for
%   the default selection.
%
%   PLANE0 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   plane0 = importfile('plane_0.dat', 1, 64356);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2020/04/09 16:54:01

%% Initialize variables.
delimiter = '\t';
if nargin<=2
  startRow = 1;
  endRow = inf;
end

%% Format for each line of text:
%   column2: double (%f)
%	column3: double (%f)
%   column4: double (%f)
%	column5: double (%f)
%   column6: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
  frewind(fileID);
  textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
  dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'ReturnOnError', false, 'EndOfLine', '\r\n');
  for col=1:length(dataArray)
    dataArray{col} = [dataArray{col};dataArrayBlock{col}];
  end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
plane0 = table(dataArray{1:end-1}, 'VariableNames', {'Y','Z','Ex','Ey','Ez'});

end
